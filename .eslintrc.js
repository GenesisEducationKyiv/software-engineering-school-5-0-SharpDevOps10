module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'prettier',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js', '**/*.d.ts'],
  rules: {
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/no-duplicate-enum-values': 'off',
    '@typescript-eslint/explicit-function-return-type': [
      'warn',
      {
        allowExpressions: false,
        allowTypedFunctionExpressions: true,
        allowHigherOrderFunctions: true,
        allowConciseArrowFunctionExpressionsStartingWithVoid: true,
      },
    ],
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/no-unused-vars': [
      'warn',
      { argsIgnorePattern: '^type$' },
    ],
    '@typescript-eslint/require-await': 'error',
    '@typescript-eslint/no-shadow': ['error'],
    '@typescript-eslint/no-empty-function': 'warn',
    '@typescript-eslint/no-empty-interface': 'warn',
    '@typescript-eslint/ban-ts-comment': [
      'error',
      { 'ts-expect-error': 'allow-with-description' }
    ],

    semi: ['error', 'always'],
    'comma-dangle': ['error', 'always-multiline'],
    'arrow-parens': ['error', 'always'],
    'arrow-spacing': 'error',
    'block-spacing': 'error',
    'brace-style': 'error',
    'comma-spacing': 'error',
    'func-call-spacing': 'error',
    'rest-spread-spacing': 'error',
    'object-curly-spacing': ['error', 'always'],
    indent: ['error', 2],
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    'space-before-function-paren': 'error',
    'new-parens': 'error',
    quotes: ['error', 'single'],
    'space-before-blocks': 'error',
    'space-in-parens': 'error',
    eqeqeq: ['error', 'smart'],
    'eol-last': ['error', 'always'],
    'no-duplicate-imports': 'error',
    'prefer-const': 'error',
    'newline-before-return': 'error',
    'no-var': 'error',
    'prefer-arrow-callback': 'error',
    'no-else-return': 'error',
    'consistent-return': 'error',
    'no-multi-spaces': 'error',
    'object-shorthand': ['error', 'always'],
  },
};
